name: Deploy WASM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WASM Demo
        run: |
          cd wasm_demo
          wasm-pack build --target web --out-dir pkg

      - name: Setup Demo Files
        run: |
          # Create output directory
          mkdir -p _site

          # Copy www content
          cp -r wasm_demo/www/* _site/

          # Copy pkg directory generated by wasm-pack
          cp -r wasm_demo/pkg _site/

          # Ensure assets directory exists in output (might be redundant if www/assets exists)
          mkdir -p _site/assets

          # Create placeholder image if it wasn't copied or doesn't exist
          # (Note: placeholder.png is binary, copying is better if it exists in source)
          if [ ! -f _site/assets/placeholder.png ]; then
            echo "Creating placeholder in _site"
            # A simple 1x1 transparent pixel
            echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII=" | base64 -d > _site/assets/placeholder.png
          fi

          # Download sample image if it wasn't copied or doesn't exist
          if [ ! -f _site/assets/sample_image.jpg ]; then
             echo "Downloading sample image to _site"
             # Use --fail to error out if download fails
             curl --fail -L -o _site/assets/sample_image.jpg https://source.unsplash.com/random/800x600/?nature
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4